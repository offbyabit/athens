{"version":3,"sources":["athens/example.cljs"],"mappings":"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","names":["athens.devcards/bmi-data","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","athens.devcards/calc-bmi","bmi-data","map__46818","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","height","weight","bmi","data","h","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","athens.devcards/slider","param","value","min","max","e","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","athens.devcards/bmi-component","map__46820","vec__46821","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/deref","color","diagnose","devcards.core/register-card","devcards.core/card-base","js/athens","js/athens.devcards","js/athens.devcards.t_athens$devcards46825","athens.devcards/t_athens$devcards46825","_46827","meta46826","this__46709__auto__","devcard-opts__46710__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__46728__auto__","cljs.core/fn?","data-atom__46729__auto__","owner__46730__auto__","reagent.core/as-element","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards/->t_athens$devcards46825","athens.devcards/main","devcards.core.start_devcard_ui_BANG__STAR_.cljs$core$IFn$_invoke$arity$0"],"sourcesContent":["(ns athens.devcards\n  (:require\n    [athens.devcards.db]\n    [athens.devcards.block]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :as devcards :include-macros true :refer [defcard]]\n    [reagent.core :as r :include-macros true]))\n\n\n(def bmi-data (r/atom {:height 180 :weight 80}))\n\n\n(defn calc-bmi\n  [bmi-data]\n  (let [{:keys [height weight bmi] :as data} bmi-data\n        h (/ height 100)]\n    (if (nil? bmi)\n      (assoc data :bmi (/ weight (* h h)))\n      (assoc data :weight (* bmi h h)))))\n\n\n(defn slider\n  [bmi-data param value min max]\n  [:input {:type \"range\" :value value :min min :max max\n           :style {:width \"100%\"}\n           :on-change (fn [e]\n                        (swap! bmi-data assoc param (.. e -target -value))\n                        (when (not= param :bmi)\n                          (swap! bmi-data assoc :bmi nil)))}])\n\n\n(defn bmi-component\n  [bmi-data]\n  (let [{:keys [weight height bmi]} (calc-bmi @bmi-data)\n        [color diagnose] (cond\n                           (< bmi 18.5) [\"orange\" \"underweight\"]\n                           (< bmi 25) [\"inherit\" \"normal\"]\n                           (< bmi 30) [\"orange\" \"overweight\"]\n                           :else [\"red\" \"obese\"])]\n    [:div\n     [:h3 \"BM calculator\"]\n     [:div\n      \"Height: \" (int height) \"cm\"\n      [slider bmi-data :height height 100 220]]\n     [:div\n      \"Weight: \" (int weight) \"kg\"\n      [slider bmi-data :weight weight 30 150]]\n     [:div\n      \"BMI: \" (int bmi) \" \"\n      [:span {:style {:color color}} diagnose]\n      [slider bmi-data :bmi bmi 10 50]]]))\n\n\n(defcard bmi-calculator\n  \"*Code taken from the Reagent readme.*\"\n  (devcards/reagent bmi-component)\n  bmi-data\n  {:inspect-data true\n   :frame true\n   :history true})\n\n\n(defn ^:export main\n  []\n  (devcards.core/start-devcard-ui!))\n"]}