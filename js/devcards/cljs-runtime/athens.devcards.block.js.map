{"version":3,"sources":["athens/devcards/block.cljs"],"mappings":"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","names":["athens.devcards.block/log","js/console.log","athens.devcards.block/trace","x","posh.reagent/posh!","athens.db/dsdb","athens.devcards.block/left-sidebar","favorites","G__53028","G__53029","posh.reagent/q","sorted-favorites","cljs.core/deref","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","cljs.core/first","G__53030","athens.style/+left-sidebar","iter__4582__auto__","s__53032","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__53034","cljs.core/chunk-buffer","i__53033","vec__53035","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__53031","cljs.core/chunk-rest","vec__53038","cljs.core/cons","cljs.core/rest","_order","title","bid","devcards.core/register-card","devcards.core/card-base","js/athens","js/athens.devcards","js/athens.devcards.block","js/athens.devcards.block.t_athens$devcards$block53041","athens.devcards.block/t_athens$devcards$block53041","_53043","meta53042","cljs.core/PROTOCOL_SENTINEL","this__47504__auto__","devcard-opts__47505__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__47523__auto__","cljs.core/fn?","data-atom__47524__auto__","owner__47525__auto__","reagent.core/as-element","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.block/->t_athens$devcards$block53041","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","athens.devcards.block/load-db","c__39615__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__39616__auto__","switch__39592__auto__","state_53082","state_val_53083","statearr-53084","inst_53045","inst_53046","inst_53047","cljs.core/PersistentHashMap","inst_53048","cljs.core.async.impl.ioc-helpers/take!","statearr-53085","inst_53078","statearr-53086","statearr-53087","inst_53050","inst_53055","inst_53056","inst_53057","inst_53058","inst_53059","statearr-53088","statearr-53089","inst_53073","inst_53075","inst_53076","statearr-53090","inst_53052","inst_53053","cljs.core/not","statearr-53091","statearr-53092","statearr-53093","inst_53071","inst_53072","cljs.core.get.cljs$core$IFn$_invoke$arity$2","statearr-53094","statearr-53095","statearr-53096","inst_53068","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","statearr-53097","inst_53066","statearr-53098","statearr-53099","inst_53080","cljs.core.async.impl.ioc-helpers/return-chan","statearr-53100","inst_53063","statearr-53101","statearr-53102","state-machine__39593__auto__","ret-value__39594__auto__","result__39595__auto__","cljs.core/keyword-identical?","e53103","js/Object","ex__39596__auto__","statearr-53104","cljs.core.async.impl.ioc-helpers/process-exception","state__39617__auto__","statearr-53105","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.get.cljs$core$IFn$_invoke$arity$variadic","athens.db/athens-url","posh.reagent/transact!","athens.db/str-to-db-tx","js/alert","athens.devcards.block/-main","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.block\n  (:require\n    [athens.db :as db]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [cljs.core.async :refer [go <!]]\n    [devcards.core :refer [defcard defcard-rg]]\n    [reagent.core :as rg]\n    [posh.reagent :refer [pull q posh! transact!]]\n    [datascript.core :as d]\n    [cljs-http.client :as http]\n    [athens.style :as style]))\n\n(def log js/console.log)\n\n(defn trace\n  [x]\n  (log x) x)\n\n(posh! db/dsdb)\n\n(defn left-sidebar\n  \"TODO: Don't know how we want to handle global subscriptions or dispatches (i.e. routing) now that we are in reagent\"\n  []\n  (let [favorites (q '[:find ?order ?title ?bid\n                       :where\n                       [?e :page/sidebar ?order]\n                       [?e :node/title ?title]\n                       [?e :block/uid ?bid]]\n                     db/dsdb)\n        sorted-favorites (->> @favorites\n                              (into [])\n                              (sort-by first))\n        ;;current-route (subscribe [:current-route])\n        ]\n    [:div {:style {:margin \"0 10px\" :max-width 250}}\n     ;;[:div [:a {:href (rfee/href :pages)} \"All /pages\"]]\n     ;;[:div [:span {:style {}} \"Current Route: \" [:b (-> @current-route :path)]]]\n     [:div {:style {:border-bottom \"1px solid gray\" :margin \"10px 0\"}}]\n     [:ul (style/+left-sidebar {})\n      (for [[_order title bid] sorted-favorites]\n        ;;^{:key bid} [:li [:a {:href (rfee/href :page {:id bid})} title]]\n        ^{:key bid} [:li [:span title]])\n      ]]))\n\n(defcard-rg left-sidebar\n  [left-sidebar])\n\n(defcard athens-dsdb\n  \"Indices are omitted because they include all the datoms\n  Could probably use this and `load-db` as generic helpers for any componenets that use posh.\"\n  (dissoc @db/dsdb :eavt :aevt :avet))\n\n(defn load-db\n  []\n  (go\n    (let [res (<! (http/get db/athens-url {:with-credentials? false}))\n          {:keys [success body]} res]\n      (if success\n        (transact! db/dsdb (db/str-to-db-tx body))\n        (js/alert \"Failed to retrieve data from GitHub\")))))\n\n\n(defn -main []\n  (load-db))\n(-main)"]}