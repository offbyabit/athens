{"version":3,"sources":["athens/views.cljs"],"mappings":"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","names":["athens.views/about-panel","athens.views/file-cb","e","fr","js/FileReader","file","p1__51062#","G__51063","re-frame.core/dispatch","athens.views/date-string","x","G__51064","athens.style/+unknown-date","js/Date","athens.views/table","nodes","G__51065","athens.style/+pages-table","iter__4582__auto__","s__51067","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__51069","cljs.core/chunk-buffer","i__51068","map__51070","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__51066","cljs.core/chunk-rest","map__51072","cljs.core/first","cljs.core/cons","cljs.core/rest","id","bid","title","c-time","e-time","reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$2","athens.views/pages-panel","G__51074","re-frame.core/subscribe","cljs.core/deref","athens.views/left-sidebar","favorites","G__51075","current-route","G__51076","reitit.frontend.easy.href.cljs$core$IFn$_invoke$arity$1","G__51077","athens.style/+left-sidebar","s__51079","b__51081","i__51080","vec__51082","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","iter__51078","vec__51085","_order","athens.views/alert","errors","G__51088","js/alert","G__51089","athens.views/match-panel","name","G__51090","cljs.core/Keyword","athens.page/main","athens.views/main-panel","G__51091","loading","G__51092","athens.style/loading-css","athens.style/main-css","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views\n  (:require\n    [athens.page :as page]\n    [athens.style :as style]\n    [athens.subs]\n    [re-frame.core :as rf :refer [subscribe dispatch]]\n    #_[reitit.frontend :as rfe]\n    [reitit.frontend.easy :as rfee]))\n\n\n(defn about-panel\n  []\n  [:div\n   [:h1 \"About Panel\"]])\n\n\n(defn file-cb\n  [e]\n  (let [fr (js/FileReader.)\n        file (.. e -target -files (item 0))]\n    (set! (.-onload fr) #(dispatch [:parse-datoms (.. % -target -result)]))\n    (.readAsText fr file)))\n\n\n(defn- date-string\n  [x]\n  (if (< x 1)\n    [:span (style/+unknown-date {}) \"(unknown date)\"]\n    (.toLocaleString  (js/Date. x))))\n\n\n(defn table\n  [nodes]\n  [:table (style/+pages-table {})\n   [:thead\n    [:tr\n     [:th\n      {:style {:text-align \"left\"}}\n      \"Page\"]\n     [:th\n      {:style {:text-align \"left\"}}\n      \"Last Edit\"]\n     [:th\n      {:style {:text-align \"left\"}}\n      \"Created At\"]]]\n   [:tbody\n    (for [{id :db/id\n           bid :block/uid\n           title :node/title\n           c-time :create/time\n           e-time :edit/time} nodes]\n      ^{:key id}\n      [:tr\n       [:td\n        {:style {:height 24}}\n        [:a {:href (rfee/href :page {:id bid})}\n         title]]\n       [:td (date-string c-time)]\n       [:td (date-string e-time)]])]])\n\n\n(defn pages-panel\n  []\n  (let [nodes (subscribe [:pull-nodes])]\n    (fn []\n      [:div\n       [:p\n        \"Upload your DB \" [:a {:href \"\"} \"(tutorial)\"]]\n       [:input {:type \"file\"\n                :name \"file-input\"\n                :on-change (fn [e] (file-cb e))}]\n       [table @nodes]])))\n\n\n(defn left-sidebar\n  []\n  (fn []\n    (let [favorites (subscribe [:favorites])\n          current-route (subscribe [:current-route])]\n      [:div {:style {:margin \"0 10px\" :max-width 250}}\n       [:div [:a {:href (rfee/href :pages)} \"All /pages\"]]\n       [:div [:span {:style {}} \"Current Route: \" [:b (-> @current-route :path)]]]\n       [:div {:style {:border-bottom \"1px solid gray\" :margin \"10px 0\"}}]\n       [:ul (style/+left-sidebar {})\n        (for [[_order title bid] @favorites]\n          ^{:key bid} [:li [:a {:href (rfee/href :page {:id bid})} title]])]])))\n\n\n(defn alert\n  \"When `:errors` subscription is updated, global alert will be called with its contents and then cleared.\"\n  []\n  (let [errors (subscribe [:errors])]\n    (when (seq @errors)\n      (js/alert (str @errors))\n      (dispatch [:clear-errors]))))\n\n\n(defn match-panel\n  [name]\n  [(case name\n     :about about-panel\n     :pages pages-panel\n     :page page/main\n     pages-panel)])\n\n\n(defn main-panel\n  []\n  (let [current-route (subscribe [:current-route])\n        loading (subscribe [:loading])]\n    (fn []\n      [alert]\n      (if @loading\n        [:div\n         [style/loading-css]\n         [:h4 {:id \"loading-text\"} \"Loading database...\"]]\n        [:div {:style {:display \"flex\"}}\n         [style/main-css]\n         [left-sidebar]\n         [match-panel (-> @current-route :data :name)]]))))\n"]}